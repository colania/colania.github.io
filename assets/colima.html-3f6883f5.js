import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as p,a,b as n,d as e,e as l}from"./app-81c39c99.js";const i={},r=a("h1",{id:"docker-colima",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker-colima","aria-hidden":"true"},"#"),n(" Docker Colima")],-1),d=a("p",null,"在mac 上，要运行docker ，需要通过docker desktop 创建docker运行的环境，但是这玩意太重了，风扇总是飞起。于是找到了一个代替docker desktop的轻量级工具，缺点是没有可视化界面。",-1),u=a("h2",{id:"介绍",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),n(" 介绍")],-1),m={href:"https://github.com/abiosoft/colima",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/lima-vm/lima",target:"_blank",rel:"noopener noreferrer"},v=l(`<p>Colima 实际上是通过 Lima 启动了名为 colima 的虚拟机，使用虚拟机中的 containerd 作为容器运行时。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>Colima 的使用很简单，执行下面的命令就可以创建虚拟机，默认是 Docker 的运行时。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima start
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0000</span><span class="token punctuation">]</span> starting colima
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0000</span><span class="token punctuation">]</span> creating and starting <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                     context<span class="token operator">=</span>vm
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0119</span><span class="token punctuation">]</span> provisioning <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                              context<span class="token operator">=</span>docker
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0119</span><span class="token punctuation">]</span> provisioning in <span class="token constant">VM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        context<span class="token operator">=</span>docker
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0133</span><span class="token punctuation">]</span> restarting <span class="token constant">VM</span> <span class="token keyword">to</span> <span class="token namespace">complete</span> setup <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>           context<span class="token operator">=</span>docker
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0133</span><span class="token punctuation">]</span> stopping <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                                  context<span class="token operator">=</span>vm
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0136</span><span class="token punctuation">]</span> starting <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                                  context<span class="token operator">=</span>vm
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0158</span><span class="token punctuation">]</span> starting <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                                  context<span class="token operator">=</span>docker
<span class="token constant">INFO</span><span class="token punctuation">[</span><span class="token number">0159</span><span class="token punctuation">]</span> done
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，在宿主机上就可以使用 Docker 相关的命令了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>docker ps
<span class="token constant">CONTAINER</span> <span class="token constant">ID</span>   <span class="token constant">IMAGE</span>     <span class="token constant">COMMAND</span>   <span class="token constant">CREATED</span>   <span class="token constant">STATUS</span>    <span class="token constant">PORTS</span>     <span class="token constant">NAMES</span>

docker pull busybox

docker images
<span class="token constant">REPOSITORY</span>   <span class="token constant">TAG</span>       <span class="token constant">IMAGE</span> <span class="token constant">ID</span>       <span class="token constant">CREATED</span>       <span class="token constant">SIZE</span>
busybox      latest    b34806a1af7a   <span class="token number">2</span> weeks ago   <span class="token number">1.41</span><span class="token constant">MB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用 Lima 的命令行 limact工具查看虚拟机的情况</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>limactl list
<span class="token constant">NAME</span>      <span class="token constant">STATUS</span>     <span class="token constant">SSH</span>                <span class="token constant">ARCH</span>       <span class="token constant">CPUS</span>    <span class="token constant">MEMORY</span>    <span class="token constant">DISK</span>     <span class="token constant">DIR</span>
colima    <span class="token class-name">Running</span>    <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">64505</span>    aarch64    <span class="token number">2</span>       <span class="token number">2</span>GiB      <span class="token number">60</span>GiB    <span class="token operator">/</span><span class="token class-name">Users</span><span class="token operator">/</span>addo<span class="token operator">/</span><span class="token punctuation">.</span>lima<span class="token operator">/</span>colima
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="虚拟机配置" tabindex="-1"><a class="header-anchor" href="#虚拟机配置" aria-hidden="true">#</a> 虚拟机配置</h2><p>Colima 启动的虚拟机默认是 2CPU、2GiB 内存 和 60GiB 存储。可以在创建时通过 --cpu 、--memory 和 --disk 来分配更多资源。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima start <span class="token operator">--</span>cpu <span class="token number">4</span> <span class="token operator">--</span>memory <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以修改当前虚拟机的配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima stop
colima start <span class="token operator">--</span>cpu <span class="token number">4</span> <span class="token operator">--</span>memory <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然colima除了docker也是支持containerd的</p><p>在此之前先删除原来生成的虚拟机</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima stop
colima delete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>之后创建新的虚拟机</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima start <span class="token operator">--</span>runtime containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建完成之后查看容器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima nerdctl ps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者运行一个容器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima nerdctl container run nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>除了containerd colima还支持创建k8s</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima start <span class="token operator">--</span><span class="token keyword">with</span><span class="token operator">-</span>kubernetes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>支持自定义虚拟机大小</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>colima start <span class="token operator">--</span>cpu <span class="token number">4</span> <span class="token operator">--</span>memory <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,26);function b(g,h){const s=o("ExternalLinkIcon");return c(),p("div",null,[r,d,u,a("p",null,[a("a",m,[n("Colima"),e(s)]),n(" 是一个以最小化设置来在MacOS上运行容器运行时和 Kubernetes 的工具。")]),a("p",null,[n("Colima 的名字取自 Container on Lima。"),a("a",k,[n("Lima"),e(s)]),n(" 是一个虚拟机工具，可以实现自动的文件共享、端口转发以及 containerd。")]),v])}const _=t(i,[["render",b],["__file","colima.html.vue"]]);export{_ as default};
