const e=JSON.parse('{"key":"v-6be5dca2","path":"/code/work/onlineProblem.html","title":"系统稳定方法论","lang":"zh-CN","frontmatter":{"article":true,"title":"系统稳定方法论","order":1,"description":"系统稳定方法论 前两天在做一次面试的时候，遇到一个问题：当你的XX服务出现线上问题，要怎么处理。当时回答的时候，没有做好梳理，回答的比较杂乱。最近就一直在想这个事情，对自己曾经处理过的一些线上事故进行了梳理，打算输出本系列文章。 1. 流程图 流程图 2. 核心关键 2.1 事前 事前就需要有\\"我在做这个系统的时候，就需要考虑到各方面的问题\\"的想法,比如说和三方交互，三方出问题怎么办；以及上游突然流量很大，我们该如何做好承压；还有更重要的一点事，我们首要保证核心主链路的正常运转，尽量不要因为代码的问题出现异常情况。（不要小看这个问题，大家有多少线上异常是因为代码bug导致的）。","head":[["meta",{"property":"og:url","content":"https://newzone.top/code/work/onlineProblem.html"}],["meta",{"property":"og:site_name","content":"田野梦呓"}],["meta",{"property":"og:title","content":"系统稳定方法论"}],["meta",{"property":"og:description","content":"系统稳定方法论 前两天在做一次面试的时候，遇到一个问题：当你的XX服务出现线上问题，要怎么处理。当时回答的时候，没有做好梳理，回答的比较杂乱。最近就一直在想这个事情，对自己曾经处理过的一些线上事故进行了梳理，打算输出本系列文章。 1. 流程图 流程图 2. 核心关键 2.1 事前 事前就需要有\\"我在做这个系统的时候，就需要考虑到各方面的问题\\"的想法,比如说和三方交互，三方出问题怎么办；以及上游突然流量很大，我们该如何做好承压；还有更重要的一点事，我们首要保证核心主链路的正常运转，尽量不要因为代码的问题出现异常情况。（不要小看这个问题，大家有多少线上异常是因为代码bug导致的）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-20T08:13:21.000Z"}],["meta",{"property":"article:author","content":"田野"}],["meta",{"property":"article:modified_time","content":"2023-09-20T08:13:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统稳定方法论\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-20T08:13:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"田野\\",\\"url\\":\\"https://colania.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 流程图","slug":"_1-流程图","link":"#_1-流程图","children":[]},{"level":2,"title":"2. 核心关键","slug":"_2-核心关键","link":"#_2-核心关键","children":[{"level":3,"title":"2.1 事前","slug":"_2-1-事前","link":"#_2-1-事前","children":[]},{"level":3,"title":"2.3 事中","slug":"_2-3-事中","link":"#_2-3-事中","children":[]}]},{"level":2,"title":"2.4 事后","slug":"_2-4-事后","link":"#_2-4-事后","children":[]}],"git":{"createdTime":1695197601000,"updatedTime":1695197601000,"contributors":[{"name":"edy","email":"weiwei@wjinfo.cn","commits":1}]},"readingTime":{"minutes":6.38,"words":1915},"filePathRelative":"code/work/onlineProblem.md","localizedDate":"2023年9月20日","excerpt":"<h1> 系统稳定方法论</h1>\\n<p>前两天在做一次面试的时候，遇到一个问题：当你的XX服务出现线上问题，要怎么处理。当时回答的时候，没有做好梳理，回答的比较杂乱。最近就一直在想这个事情，对自己曾经处理过的一些线上事故进行了梳理，打算输出本系列文章。</p>\\n<h2> 1. 流程图</h2>\\n<figure><figcaption>流程图</figcaption></figure>\\n<h2> 2. 核心关键</h2>\\n<h3> 2.1 事前</h3>\\n<p>事前就需要有\\"我在做这个系统的时候，就需要考虑到各方面的问题\\"的想法,比如说和三方交互，三方出问题怎么办；以及上游突然流量很大，我们该如何做好承压；还有更重要的一点事，我们首要保证核心主链路的正常运转，尽量不要因为代码的问题出现异常情况。（不要小看这个问题，大家有多少线上异常是因为代码bug导致的）。</p>","autoDesc":true}');export{e as data};
